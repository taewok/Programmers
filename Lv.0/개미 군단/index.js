// 문제 설명
// 개미 군단이 사냥을 나가려고 합니다. 개미군단은 사냥감의 체력에 딱 맞는 병력을 데리고 나가려고 합니다. 장군개미는 5의 공격력을, 병정개미는 3의 공격력을 일개미는 1의 공격력을 가지고 있습니다. 예를 들어 체력 23의 여치를 사냥하려고 할 때, 일개미 23마리를 데리고 가도 되지만, 장군개미 네 마리와 병정개미 한 마리를 데리고 간다면 더 적은 병력으로 사냥할 수 있습니다. 사냥감의 체력 hp가 매개변수로 주어질 때, 사냥감의 체력에 딱 맞게 최소한의 병력을 구성하려면 몇 마리의 개미가 필요한지를 return하도록 solution 함수를 완성해주세요.

// 제한사항
// hp는 자연수입니다.
// 0 ≤ hp ≤ 1000

// 입출력 예
// hp	result
// 23	5
// 24	6
// 999	201

// 입출력 예 설명
// 입출력 예 #1
// hp가 23이므로, 장군개미 네마리와 병정개미 한마리로 사냥할 수 있습니다. 따라서 5를 return합니다.
// 입출력 예 #2
// hp가 24이므로, 장군개미 네마리 병정개미 한마리 일개미 한마리로 사냥할 수 있습니다. 따라서 6을 return합니다.
// 입출력 예 #3
// hp가 999이므로, 장군개미 199 마리 병정개미 한마리 일개미 한마리로 사냥할 수 있습니다. 따라서 201을 return합니다.

function solution(hp) {
  var answer = 0;

  const 장군개미 = 5;
  const 병정개미 = 3;
  const 일개미 = 1;

  let 남은hp = hp;

  // 남은hp가 0이될 때 까지 반복문 수행
  while (남은hp) {
    // 남은hp가 5이상일 때는 장군개미 사용
    if (남은hp >= 5) {
      answer += Math.floor(남은hp / 장군개미);
      남은hp -= Math.floor(남은hp / 장군개미) * 장군개미;
    }

    // 남은hp가 5이상일 때는 장군개미 사용
    else if (남은hp >= 3) {
      answer += Math.floor(남은hp / 병정개미);
      남은hp -= Math.floor(남은hp / 병정개미) * 병정개미;
    }

    // 예외 처리로 일개미 사용
    else {
      answer += Math.floor(남은hp / 일개미);
      남은hp -= Math.floor(남은hp / 일개미) * 일개미;
    }
  }

  return answer;
}

// 위 반복문에서 주의할 점은 남은hp를 구하는 코드가 answer변수코드 보다 위에 위치하면 안된다. 계산식에 들어가는 남은hp가 변화하기 때문

console.log(solution(23));
